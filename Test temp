awk '
/^[0-9]{2}-[A-Z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}/ {
    # Capture the timestamp
    timestamp = $0
}

/Elapsed:/ {
    # Capture and print the elapsed time with the corresponding timestamp
    print timestamp " ——— " $0
}
' your_log_file.log




WITH Partition_Data AS (
    SELECT 
        TABLE_NAME,
        PARTITION_NAME,
        TO_DATE(
            TRIM('TO_DATE(' FROM HIGH_VALUE), 
            'YYYY-MM-DD'
        ) AS PARTITION_DATE
    FROM 
        DBA_TAB_PARTITIONS
    WHERE 
        TABLE_NAME = 'YOUR_TABLE_NAME'
)
SELECT * 
FROM Partition_Data
WHERE PARTITION_DATE = TO_DATE('2024-12-13', 'YYYY-MM-DD');


SET SERVEROUTPUT ON
DECLARE
    v_joindate VARCHAR2(4000); -- Variable to hold the converted LONG value
    v_today    DATE := SYSDATE; -- Today's date
BEGIN
    FOR rec IN (
        SELECT EMPID, TO_LOB(JOINDATE) AS JOINDATE_RAW
        FROM EMPLOYEES
    ) LOOP
        BEGIN
            -- Attempt to convert the LONG value to a date dynamically
            EXECUTE IMMEDIATE 'SELECT ' || rec.JOINDATE_RAW || ' FROM DUAL' INTO v_joindate;
            
            -- Compare with today's date
            IF TO_DATE(v_joindate, 'YYYY-MM-DD') = TRUNC(v_today) THEN
                DBMS_OUTPUT.PUT_LINE('EmpID: ' || rec.EMPID || ' joined today.');
            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Error processing JOINDATE for EmpID: ' || rec.EMPID);
        END;
    END LOOP;
END;
/












-- 1. Tablespace growth between dates using DBA_HIST_TBSPC_SPACE_USAGE
SELECT
    TABLESPACE_NAME,
    TO_CHAR(ROUND(MIN(TABLESPACE_SIZE * 8192 / 1024 / 1024), 2), '999,999.99') || ' MB' AS SIZE_AT_START,
    TO_CHAR(ROUND(MAX(TABLESPACE_SIZE * 8192 / 1024 / 1024), 2), '999,999.99') || ' MB' AS SIZE_AT_END,
    TO_CHAR(ROUND((MAX(TABLESPACE_SIZE) - MIN(TABLESPACE_SIZE)) * 8192 / 1024 / 1024, 2), '999,999.99') || ' MB' AS GROWTH
FROM
    DBA_HIST_TBSPC_SPACE_USAGE
WHERE
    SNAP_ID IN (
        SELECT SNAP_ID
        FROM DBA_HIST_SNAPSHOT
        WHERE BEGIN_INTERVAL_TIME >= TO_DATE('&start_date', 'YYYY-MM-DD')
        AND END_INTERVAL_TIME <= TO_DATE('&end_date', 'YYYY-MM-DD')
    )
GROUP BY
    TABLESPACE_NAME
ORDER BY
    TABLESPACE_NAME;

-- 2. Segment growth analysis between dates
SELECT 
    OWNER,
    SEGMENT_NAME,
    SEGMENT_TYPE,
    TABLESPACE_NAME,
    TO_CHAR(ROUND(SUM(BYTES)/1024/1024,2), '999,999.99') || ' MB' AS SIZE_MB
FROM
    DBA_SEGMENTS
WHERE
    CREATED >= TO_DATE('&start_date', 'YYYY-MM-DD')
    AND CREATED <= TO_DATE('&end_date', 'YYYY-MM-DD')
GROUP BY
    OWNER, SEGMENT_NAME, SEGMENT_TYPE, TABLESPACE_NAME
ORDER BY
    SUM(BYTES) DESC;

-- 3. AWR-based size growth analysis
SELECT
    s.SNAP_ID,
    TO_CHAR(s.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI') AS SNAPSHOT_TIME,
    TO_CHAR(ROUND(SUM(u.TABLESPACE_SIZE * 8192 / 1024 / 1024), 2), '999,999.99') || ' MB' AS TOTAL_SIZE
FROM
    DBA_HIST_TBSPC_SPACE_USAGE u
    JOIN DBA_HIST_SNAPSHOT s ON u.SNAP_ID = s.SNAP_ID
WHERE
    s.BEGIN_INTERVAL_TIME >= TO_DATE('&start_date', 'YYYY-MM-DD')
    AND s.END_INTERVAL_TIME <= TO_DATE('&end_date', 'YYYY-MM-DD')
GROUP BY
    s.SNAP_ID, s.BEGIN_INTERVAL_TIME
ORDER BY
    s.SNAP_ID;

-- 4. Current total database size
SELECT
    TO_CHAR(ROUND(SUM(BYTES)/1024/1024/1024, 2), '999,999.99') || ' GB' AS TOTAL_SIZE
FROM
    DBA_DATA_FILES;










-- 1. Tablespace size and growth analysis with names
SELECT 
    t.NAME as TABLESPACE_NAME,
    TO_CHAR(ROUND(MIN(u.TABLESPACE_SIZE * t.BLOCK_SIZE / 1024 / 1024), 2), '999,999.99') || ' MB' AS SIZE_AT_START,
    TO_CHAR(ROUND(MAX(u.TABLESPACE_SIZE * t.BLOCK_SIZE / 1024 / 1024), 2), '999,999.99') || ' MB' AS SIZE_AT_END,
    TO_CHAR(ROUND((MAX(u.TABLESPACE_SIZE) - MIN(u.TABLESPACE_SIZE)) * t.BLOCK_SIZE / 1024 / 1024, 2), '999,999.99') || ' MB' AS GROWTH,
    TO_CHAR(ROUND(MAX(u.TABLESPACE_USEDSIZE * t.BLOCK_SIZE / 1024 / 1024), 2), '999,999.99') || ' MB' AS USED_SPACE,
    ROUND((MAX(u.TABLESPACE_USEDSIZE)/MAX(u.TABLESPACE_SIZE)) * 100, 2) || '%' AS USED_PCT
FROM 
    DBA_HIST_TBSPC_SPACE_USAGE u
    JOIN V$TABLESPACE v ON u.TABLESPACE_ID = v.TS#
    JOIN DBA_TABLESPACES t ON v.NAME = t.TABLESPACE_NAME
WHERE 
    u.SNAP_ID IN (
        SELECT SNAP_ID 
        FROM DBA_HIST_SNAPSHOT
        WHERE BEGIN_INTERVAL_TIME >= TO_DATE('&start_date', 'YYYY-MM-DD')
        AND END_INTERVAL_TIME <= TO_DATE('&end_date', 'YYYY-MM-DD')
    )
GROUP BY 
    t.NAME, t.BLOCK_SIZE
ORDER BY 
    t.NAME;

-- 2. Current tablespace usage (point-in-time)
SELECT 
    df.TABLESPACE_NAME,
    TO_CHAR(ROUND(SUM(df.BYTES) / 1024 / 1024, 2), '999,999.99') || ' MB' AS TOTAL_SPACE,
    TO_CHAR(ROUND(SUM(df.BYTES) / 1024 / 1024 - 
        NVL(SUM(fs.BYTES) / 1024 / 1024, 0), 2), '999,999.99') || ' MB' AS USED_SPACE,
    TO_CHAR(ROUND(NVL(SUM(fs.BYTES) / 1024 / 1024, 0), 2), '999,999.99') || ' MB' AS FREE_SPACE,
    ROUND((1 - NVL(SUM(fs.BYTES), 0) / SUM(df.BYTES)) * 100, 2) || '%' AS USED_PCT
FROM 
    DBA_DATA_FILES df
    LEFT JOIN DBA_FREE_SPACE fs ON df.TABLESPACE_NAME = fs.TABLESPACE_NAME 
        AND df.FILE_ID = fs.FILE_ID
GROUP BY 
    df.TABLESPACE_NAME
ORDER BY 
    df.TABLESPACE_NAME;

-- 3. Detailed tablespace growth trend
SELECT 
    t.NAME as TABLESPACE_NAME,
    TO_CHAR(s.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI') AS SNAPSHOT_TIME,
    TO_CHAR(ROUND(u.TABLESPACE_SIZE * t.BLOCK_SIZE / 1024 / 1024, 2), '999,999.99') || ' MB' AS TOTAL_SIZE,
    TO_CHAR(ROUND(u.TABLESPACE_USEDSIZE * t.BLOCK_SIZE / 1024 / 1024, 2), '999,999.99') || ' MB' AS USED_SIZE,
    ROUND((u.TABLESPACE_USEDSIZE/u.TABLESPACE_SIZE) * 100, 2) || '%' AS USED_PCT
FROM 
    DBA_HIST_TBSPC_SPACE_USAGE u
    JOIN V$TABLESPACE v ON u.TABLESPACE_ID = v.TS#
    JOIN DBA_TABLESPACES t ON v.NAME = t.TABLESPACE_NAME
    JOIN DBA_HIST_SNAPSHOT s ON u.SNAP_ID = s.SNAP_ID
WHERE 
    s.BEGIN_INTERVAL_TIME >= TO_DATE('&start_date', 'YYYY-MM-DD')
    AND s.END_INTERVAL_TIME <= TO_DATE('&end_date', 'YYYY-MM-DD')
ORDER BY 
    t.NAME, s.BEGIN_INTERVAL_TIME;
